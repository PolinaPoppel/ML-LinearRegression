{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.16\n",
      "0.43\n",
      "0.09\n",
      "0.31\n",
      "1.72\n",
      "4.75\n",
      "1.0\n",
      "3.51\n"
     ]
    }
   ],
   "source": [
    "#Q1\n",
    "import random\n",
    "\n",
    "\n",
    "#Movies, Comp-551, Playing, Studying\n",
    "m = 0.2\n",
    "c = 0.4\n",
    "p = 0.1\n",
    "s = 0.3\n",
    "\n",
    "m_new = 0\n",
    "c_new = 0\n",
    "p_new = 0\n",
    "s_new = 0\n",
    "\n",
    "for i in range(1,100):\n",
    "\tsample = random.uniform(0, 1)\n",
    "\tif sample <= 0.2 :\n",
    "\t\t#print (\"The student watches movies\",i)\n",
    "\t\tm_new = m_new + 1\n",
    "\telif sample > 0.2 and sample <= 0.6 :\n",
    "\t\t#print (\"The student does Comp-551\",i)\n",
    "\t\tc_new = c_new + 1\n",
    "\telif sample > 0.6 and sample <= 0.7 :\n",
    "\t\t#print (\"The student is playing\",i)\n",
    "\t\tp_new = p_new + 1\n",
    "\telse:\n",
    "\t\t#print (\"The student is studying\",i)\n",
    "\t\ts_new = s_new + 1\n",
    "\n",
    "m_prob = m_new/100\n",
    "c_prob = c_new/100\n",
    "p_prob = p_new/100\n",
    "s_prob = s_new/100\n",
    "\n",
    "#print (m_prob)\n",
    "#print (c_prob)\n",
    "#print (p_prob)\n",
    "#print (s_prob)\n",
    "\n",
    "\n",
    "for i in range(1,1000):\n",
    "\tsample = random.uniform(0, 1)\n",
    "\tif sample <= m_prob :\n",
    "\t\t#print (\"The student watches movies\",i)\n",
    "\t\tm_new = m_new + 1\n",
    "\telif sample > m_prob and sample <= (m_prob+ c_prob):\n",
    "\t\t#print (\"The student does Comp-551\",i)\n",
    "\t\tc_new = c_new + 1\n",
    "\telif sample > (m_prob+ c_prob) and sample <= (m_prob+ c_prob+p_prob) :\n",
    "\t\t#print (\"The student is playing\",i)\n",
    "\t\tp_new = p_new + 1\n",
    "\telse:\n",
    "\t\t#print (\"The student is studying\",i)\n",
    "\t\ts_new = s_new + 1\n",
    "\n",
    "m_prob_new = m_new/100\n",
    "c_prob_new = c_new/100\n",
    "p_prob_new = p_new/100\n",
    "s_prob_new = s_new/100\n",
    "\n",
    "print (m_prob_new)\n",
    "print (c_prob_new)\n",
    "print (p_prob_new)\n",
    "print (s_prob_new)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50\n",
      "50\n",
      "6.474989854781262\n",
      "1422.400922865003\n",
      "! 8.722308749432731\n",
      "6.474989854781262\n",
      "9.254893673473925 0.014\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "            20             19             18             17\n",
      "-2.008e+06 x  + 4.234e+05 x  + 9.095e+06 x  - 2.085e+06 x \n",
      "             16             15             14            13\n",
      " - 1.74e+07 x  + 4.288e+06 x  + 1.828e+07 x  - 4.79e+06 x \n",
      "              12             11             10             9\n",
      " - 1.148e+07 x  + 3.163e+06 x  + 4.398e+06 x  - 1.255e+06 x\n",
      "              8             7             6             5        4\n",
      " - 1.004e+06 x + 2.902e+05 x + 1.275e+05 x - 3.575e+04 x - 7765 x\n",
      "         3         2\n",
      " + 1910 x + 156.4 x - 15.54 x - 3.91\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "'\\n#########\\n#plotting regularized f\\n#getting lambdas\\nplt.title(\"MSE for a training set\")\\nplt.xlabel(\"lambda\")\\nplt.ylabel(\"training MSE\")\\nplt.axis([0, 1, 0, 12])\\nxs = np.arange(0,1,0.01)\\nplt.plot(xs,MSE_train_r,\"bo\")\\nplt.show()\\n\\n\\nplt.title(\"MSE for a validation set\")\\nplt.xlabel(\"lambda\")\\nplt.ylabel(\"validation MSE\")\\nplt.axis([0, 1, 0, 20])\\nxs = np.arange(0,1,0.01)\\nplt.plot(xs,MSE_valid_r,\"bo\")\\nplt.show()\\n\\n'"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Q2\n",
    "import numpy as np\n",
    "import random\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "import csv\n",
    "\n",
    "xTrain = []\n",
    "yTrain = []\n",
    "#for validation sets:\n",
    "xValid = []\n",
    "yValid = []\n",
    "xTest = []\n",
    "yTest = []\n",
    "np.set_printoptions(threshold=np.nan)\n",
    "\n",
    "#reading TRAINING data from a csv file into respective lists\n",
    "with open('Dataset_1_train.csv') as File:\n",
    "    readerFile = csv.reader(File)\n",
    "    for row in readerFile:\n",
    "        xTrain.append(row[0])\n",
    "        yTrain.append(row[1])\n",
    "#convert into floats\n",
    "xTrain = list(map(float, xTrain))\n",
    "yTrain = list(map(float, yTrain))\n",
    "\n",
    "#reading validation set:\n",
    "with open('Dataset_1_valid.csv') as File2:\n",
    "    readerFile2 = csv.reader(File2)\n",
    "    for row in readerFile2:\n",
    "        xValid.append(row[0])\n",
    "        yValid.append(row[1])\n",
    "#convert into floats\n",
    "xValid = list(map(float, xValid))\n",
    "yValid = list(map(float, yValid))\n",
    "#print (len(xValid))\n",
    "#print (len(xTrain))\n",
    "with open('Dataset_1_test.csv') as File3:\n",
    "    readerFile3 = csv.reader(File3)\n",
    "    for row in readerFile3:\n",
    "        xTest.append(row[0])\n",
    "        yTest.append(row[1])\n",
    "#convert into floats\n",
    "xTest = list(map(float, xTest))\n",
    "yTest = list(map(float, yTest))\n",
    "\n",
    "print(len(xTest))\n",
    "print(len(yTest))\n",
    "\n",
    "\n",
    "#print (x_matrix)\n",
    "#beta = []\n",
    "###########X matrix\n",
    "def compute_x_matrix (arrayX):\n",
    "\tx_matrix = np.zeros([50, 21])\n",
    "\tfor i in range(0,50):\n",
    "\t\tfor j in range(0,21):\n",
    "\t\t\tx_matrix[i][j] = arrayX[i]**j\n",
    "\treturn x_matrix\n",
    "\n",
    "def MSE(y_hat, actual_y):\n",
    "\tsummation = 0\n",
    "\tN = len(actual_y)\n",
    "\tfor i in range (0,N):\n",
    "\t\tsummation+=(actual_y[i]-y_hat[i])**2\n",
    "\tMSE = summation/N\n",
    "\treturn MSE\n",
    "\n",
    "\n",
    "def f(arrayX, beta):\n",
    "\tX = compute_x_matrix(arrayX)\n",
    "\tY_h = np.dot(X, beta)\n",
    "\treturn Y_h\n",
    "#2b) uses regularization:\n",
    "\n",
    "def alpha_matrix (N, alpha):\n",
    "\talphaMatrix = np.zeros([N+1, N+1])\n",
    "\tnp.fill_diagonal(alphaMatrix, 1)\n",
    "\talphaMatrix[0][0] = 0\n",
    "\treturn alpha*alphaMatrix\n",
    "\n",
    "#beta_1 = []\n",
    "def betas_reg (arrayX, arrayY, alpha, N):\n",
    "\tX = compute_x_matrix(arrayX)\n",
    "\tXT = np.transpose(X)\n",
    "\tXTX = np.matmul(XT, X)\n",
    "\talphaMatrix = alpha_matrix(N, alpha)\n",
    "\tXTXa = np.add(XTX, alphaMatrix)\n",
    "\tXTXinv = np.linalg.inv(XTXa)\n",
    "\tXTXinvXT = np.matmul(XTXinv, XT)\n",
    "\tbeta = np.matmul(XTXinvXT, arrayY)\n",
    "\treturn beta\n",
    "\n",
    "def MSE_alpha (y_hat, actual_y, alpha, beta):\n",
    "\tsummation = 0\n",
    "\tN = len(actual_y)\n",
    "\tfor i in range (0,N):\n",
    "\t\tsummation+=(actual_y[i]-y_hat[i])**2\n",
    "\tMSE = (summation/N) + ((alpha/N)*np.dot(beta, beta))\n",
    "\treturn MSE\n",
    "\n",
    "\n",
    "\n",
    "MSE_train = MSE(f(xTrain, betas_reg(xTrain, yTrain, 0, 20)), yTrain)\n",
    "MSE_valid = MSE(f(xValid, betas_reg(xTrain, yTrain, 0, 20)), yValid)\n",
    "\n",
    "print(MSE_train)\n",
    "print(MSE_valid)\n",
    "\n",
    "#2.2(a)\n",
    "MSE_train_r = []\n",
    "MSE_valid_r = []\n",
    "best_lambda_valid = 0\n",
    "for alpha in np.arange(0.0, 1.0, 0.001):\n",
    "    beta_reg_train = betas_reg(xTrain, yTrain, alpha, 20)\n",
    "   # beta_reg_valid = betas_reg(xTrain, yTrain, alpha, 20)\n",
    "    y_hat_reg_train = f(xTrain, beta_reg_train)\n",
    "    y_hat_reg_valid = f(xValid, beta_reg_train)\n",
    "    MSE_train_reg = MSE_alpha(y_hat_reg_train, yTrain, alpha, beta_reg_train)\n",
    "    MSE_valid_reg = MSE_alpha(y_hat_reg_valid, yValid, alpha, beta_reg_train)\n",
    "    if(MSE_valid_reg == 9.254893673473925):\n",
    "        best_lambda_valid = alpha\n",
    "    if(alpha == 0.001): \n",
    "        print(\"!\",MSE_train_reg)\n",
    "    MSE_train_r.append(MSE_train_reg)\n",
    "    MSE_valid_r.append(MSE_valid_reg)\n",
    "#2.2.b\n",
    "best_train = min(MSE_train_r)\n",
    "best_valid = min(MSE_valid_r)\n",
    "print(best_train)\n",
    "print(best_valid, best_lambda_valid)\n",
    "#print(MSE_train_r)\n",
    "#print(MSE_valid_r)\n",
    "\n",
    "\n",
    "###########\n",
    "\n",
    "xTrain[::-1]\n",
    "func = np.polyfit(xTrain, f(xTrain, betas_reg(xTrain, yTrain, 0, 20)), 20)\n",
    "f_p = np.poly1d(func)\n",
    "\n",
    "xValid[::-1]\n",
    "func1 = np.polyfit(xValid, f(xValid, betas_reg(xTrain, yTrain, 0, 20)), 20)\n",
    "f_p1 = np.poly1d(func1)\n",
    "\n",
    "##regularized\n",
    "f_l2_t = np.polyfit(xTrain, f(xTrain, betas_reg(xTrain, yTrain, 0.001, 20)), 20)\n",
    "f_p2 = np.poly1d(f_l2_t)\n",
    "\n",
    "f_l2_v = np.polyfit(xValid, f(xTrain, betas_reg(xTrain, yTrain, 0.014, 20)), 20)\n",
    "f_p3 = np.poly1d(f_l2_v)\n",
    "\n",
    "\n",
    "\n",
    "# original data\n",
    "x_coords = np.arange(-1,1,0.01)\n",
    "data = f_p(x_coords)\n",
    "data1 = f_p(x_coords)\n",
    "\n",
    "####regularized plots: train:\n",
    "data2 = f_p2(x_coords)\n",
    "data3 = f_p3(x_coords)\n",
    "\n",
    "plt.axis([0, 1, -20, 33])\n",
    "plt.plot(xTrain,yTrain,\"bo\") # plot observed data\n",
    "plt.plot(x_coords,data2) #plot origional data\n",
    "plt.title(\"Plot with L2 regularization, training\") #give title\n",
    "plt.xlabel(\"x\")\n",
    "plt.ylabel(\"y\")\n",
    "plt.legend([\"obeserved data\",'polynomial regression fit'])\n",
    "plt.show()\n",
    "\n",
    "\n",
    "plt.axis([0, 1, -20, 33])\n",
    "plt.plot(xValid,yValid,\"bo\") # plot observed data\n",
    "plt.plot(x_coords,data3) #plot origional data\n",
    "plt.title(\"Plot with L2 regularization, validation\") #give title\n",
    "plt.xlabel(\"x\")\n",
    "plt.ylabel(\"y\")\n",
    "plt.legend([\"obeserved data\",'polynomial regression fit'])\n",
    "plt.show()\n",
    "\n",
    "####training with validation lambda\n",
    "f_l2_test = np.polyfit(xTest, f(xTest, betas_reg(xTrain, yTrain, 0.014, 20)), 20)\n",
    "f_p4 = np.poly1d(f_l2_test)\n",
    "data4 = f_p4(x_coords)\n",
    "\n",
    "plt.axis([0, 1, -20, 33])\n",
    "plt.plot(xTrain,yTrain,\"bo\") # plot observed data\n",
    "plt.plot(x_coords,data4) #plot origional data\n",
    "plt.title(\"Plot with L2 regularization, testing\") #give title\n",
    "plt.xlabel(\"x\")\n",
    "plt.ylabel(\"y\")\n",
    "plt.legend([\"obeserved data\",'polynomial regression fit'])\n",
    "plt.show()\n",
    "########\n",
    "\n",
    "plt.axis([-1, 1, -20, 33])\n",
    "plt.plot(xTrain,yTrain,\"bo\") # plot observed data\n",
    "plt.plot(x_coords,data) #plot origional data\n",
    "plt.title(\"My pretty plot\") #give title\n",
    "plt.xlabel(\"x\")\n",
    "plt.ylabel(\"y\")\n",
    "plt.legend([\"obeserved data\",'polynomial regression fit'])\n",
    "plt.show()\n",
    "\n",
    "plt.axis([-1, 1, -20, 33])\n",
    "plt.plot(xValid,yValid,\"bo\") # plot observed data\n",
    "plt.plot(x_coords,data1) #plot origional data\n",
    "plt.title(\"My pretty plot2\") #give title\n",
    "plt.xlabel(\"x\")\n",
    "plt.ylabel(\"y\")\n",
    "plt.legend([\"obeserved data\",'polynomial regression fit'])\n",
    "plt.show()\n",
    "print(f_p)\n",
    "'''\n",
    "#########\n",
    "#plotting regularized f\n",
    "#getting lambdas\n",
    "plt.title(\"MSE for a training set\")\n",
    "plt.xlabel(\"lambda\")\n",
    "plt.ylabel(\"training MSE\")\n",
    "plt.axis([0, 1, 0, 12])\n",
    "xs = np.arange(0,1,0.01)\n",
    "plt.plot(xs,MSE_train_r,\"bo\")\n",
    "plt.show()\n",
    "\n",
    "\n",
    "plt.title(\"MSE for a validation set\")\n",
    "plt.xlabel(\"lambda\")\n",
    "plt.ylabel(\"validation MSE\")\n",
    "plt.axis([0, 1, 0, 20])\n",
    "xs = np.arange(0,1,0.01)\n",
    "plt.plot(xs,MSE_valid_r,\"bo\")\n",
    "plt.show()\n",
    "\n",
    "'''\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Q3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "w0:  4.103343240249269 w1:  3.655895453689307\n",
      "MSE_Valid:  0.19078399828255904\n",
      "MSE_Test:  65.49868677953894\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import random\n",
    "import csv\n",
    "import matplotlib.pyplot as plt\n",
    " \n",
    "#train set will populate these lists\n",
    "xTrain = []\n",
    "yTrain = []\n",
    "xValid = []\n",
    "yValid = []\n",
    "xTest = []\n",
    "yTest = []\n",
    "\n",
    "    \n",
    "#reading from a csv file into respective lists\n",
    "with open('/Users/home/Documents/Comp551A1/Dataset_2_train.csv') as File:\n",
    "    readerFile = csv.reader(File)\n",
    "    for row in readerFile:\n",
    "        xTrain.append(row[0])\n",
    "        yTrain.append(row[1])\n",
    "\n",
    "#convert into floats\n",
    "xTrain = list(map(float, xTrain))\n",
    "yTrain = list(map(float, yTrain))\n",
    "#print(xTrain)\n",
    "#print(yTrain)\n",
    "\n",
    "#reading from a validation csv file into respective lists\n",
    "with open('/Users/home/Documents/Comp551A1/Dataset_2_valid.csv') as File1:\n",
    "    readerFile1 = csv.reader(File1)\n",
    "    for row in readerFile1:\n",
    "        xValid.append(row[0])\n",
    "        yValid.append(row[1])\n",
    "\n",
    "#convert into floats\n",
    "xValid = list(map(float, xValid))\n",
    "yValid = list(map(float, yValid))\n",
    "\n",
    "with open('/Users/home/Documents/Comp551A1/Dataset_1_test.csv') as File3:\n",
    "    readerFile3 = csv.reader(File3)\n",
    "    for row in readerFile3:\n",
    "        xTest.append(row[0])\n",
    "        yTest.append(row[1])\n",
    "#convert into floats\n",
    "xTest = list(map(float, xTest))\n",
    "yTest = list(map(float, yTest))\n",
    "\n",
    "#print (len(xTrain))\n",
    "#initializing w0, w1 to some random small numbers\n",
    "w0 = random.uniform(0,1)\n",
    "w1 = random.uniform(0,1)\n",
    "N = len(xTrain) #total # of data pts\n",
    "alpha = 0.000001\n",
    "\n",
    "s=0\n",
    "\n",
    "def MSE(y_hat, actual_y):\n",
    "\tsummation = 0\n",
    "\tN = len(actual_y)\n",
    "\tfor i in range (0,N):\n",
    "\t\tsummation+=(actual_y[i]-y_hat[i])**2\n",
    "\tMSE = summation/N\n",
    "\treturn MSE\n",
    "\n",
    "\n",
    "\n",
    "MSE_array = []\n",
    "MSE_array_valid = []\n",
    "\n",
    "for k in range (10000):\n",
    "   # print(\"here\", s)\n",
    "    s=s+1\n",
    "    combined = list(zip(xTrain, yTrain))\n",
    "    random.shuffle(combined)\n",
    "    xTrain, yTrain = zip(*combined)\n",
    "   \n",
    "    xTrain = list(xTrain)\n",
    "    yTrain = list(yTrain)\n",
    "    \n",
    "    Y_hat = np.zeros([len(yTrain)])\n",
    "\n",
    "    for i in range(1,N):\n",
    "    #evaluating \n",
    "        Y_hat[i] = w0 + w1 * xTrain[i]\n",
    "        lossF = Y_hat[i] - yTrain[i]\n",
    "        w0 = w0 - alpha * lossF\n",
    "        w1 = w1 - alpha * lossF * xTrain[i]\n",
    "       \n",
    "        \n",
    "    \n",
    "   \n",
    "    MSE_ = MSE(Y_hat, yTrain)\n",
    "    MSE_array.append(MSE_)\n",
    "    \n",
    "    y_hat_valid = []\n",
    "    for j in range(len(xValid)):\n",
    "        y_hat_v = w0 + w1*xValid[j]\n",
    "        y_hat_valid.append(y_hat_v)\n",
    "\n",
    "    MSE_valid = MSE(y_hat_valid, yValid)\n",
    "    MSE_array_valid.append(MSE_valid)\n",
    "print(\"w0: \",w0, \"w1: \", w1)\n",
    "\n",
    "\n",
    "#####3.2\n",
    "Y_hat_valid = []\n",
    "for j in range(len(xValid)):\n",
    "    Y_hat_v = w0 + w1*xValid[j]\n",
    "    Y_hat_valid.append(y_hat_v)\n",
    "MSE_Valid = MSE(y_hat_valid, yValid)\n",
    "print(\"MSE_Valid: \", MSE_Valid)\n",
    "    \n",
    "\n",
    "#######3.3b test MSE\n",
    "Y_hat_test = []\n",
    "for j in range(len(xTest)):\n",
    "    Y_hat_t = w0 + w1*xTest[j]\n",
    "    Y_hat_test.append(Y_hat_t)\n",
    "MSE_Test = MSE(Y_hat_test, yTest)\n",
    "print(\"MSE_Test: \", MSE_Test)\n",
    "\n",
    "\t\t\n",
    "\t\t#############################\n",
    "\n",
    "\n",
    "\n",
    "#print(MSE_array)\n",
    "plt.title(\"Learning curve\")\n",
    "plt.xlabel(\"epoch\")\n",
    "plt.ylabel(\"MSE\")\n",
    "plt.legend([\"validation MSE\",'training MSE'])\n",
    "plt.axis([0, 10000, 0, 14])\n",
    "epochs = []\n",
    "for epoch in range(0, 10000):\n",
    "    epochs.append(epoch)\n",
    "#xs = np.arange(0,10000,10)\n",
    "plt.plot(epochs, MSE_array, 'bo', label=\"Training\")\n",
    "plt.plot(epochs, MSE_array_valid, 'ro', label = \"Validation\")\n",
    "plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\n",
    "plt.show()\n",
    "\n",
    "#plt.axis([0, 30, 0, 30])\n",
    "#fs = []\n",
    "#epochs = []\n",
    "#for epoch in range(0, 2832):\n",
    "#    epochs.append(epoch)\n",
    "#    f = w0 + w1*epoch\n",
    "#    fs.append(f)\n",
    "    \n",
    "#plt.title(\"1000 epoch\")    \n",
    "#plt.xlabel(\"x\")\n",
    "#plt.ylabel(\"y\")   \n",
    "\n",
    "#plt.plot(epochs, fs, 'bo', label=\"Training\")\n",
    "#plt.plot(epochs, MSE_array_valid, 'ro', label = \"Validation\")\n",
    "##plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)\n",
    "#plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "Q4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "np.set_printoptions(threshold=np.nan)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "data = pd.read_csv('http://archive.ics.uci.edu/ml/machine-learning-databases/communities/communities.data',header=None)\n",
    "#print (data)\n",
    "\n",
    "print(data.shape[0])\n",
    "\n",
    "for i in range (data.shape[1]):\n",
    "\tif i != 3: \n",
    "\t\tsummation = 0\n",
    "\t\tmean = 0\n",
    "\t\tcounter = 0\n",
    "\t\tquestions = []\n",
    "\t\tfor j in range (data.shape[0]):\n",
    "\t\t\tif data.iloc[j][i] == '?' :\n",
    "\t\t\t\tquestions.append(j)\n",
    "\t\t\telse:\n",
    "\t\t\t\tsummation+=(float)(data.iloc[j][i])\n",
    "\t\t\t\tcounter+=1\n",
    "\n",
    "\t\tif counter!=0: \n",
    "\t\t\tmean = summation/counter\n",
    "\t\t#else:continue \n",
    "\n",
    "\t\tfor q in questions:\n",
    "\t\t\tdata.at[q, i] = mean\n",
    "\telse:\n",
    "\t\tcontinue\n",
    "data.to_csv(\"dataQ4.csv\", sep='\\t')\n",
    "\n",
    "print (data)\n",
    "#def split_data(df, train_perc = 0.8):\n",
    "for i in range(1,6):\n",
    "\ttrain = data.sample(frac = 0.8)\n",
    "\ttest = data.drop(train.index)\n",
    "\ttrain.to_csv(\"CandC-train\"+str(i)+\".csv\", index=False, header = False)\n",
    "\ttest.to_csv(\"CandC-test\"+str(i)+\".csv\", index=False, header = False)\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
